services:
  postgres:
    image: postgres:16.1
    restart: always
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: posbhedres
      POSTGRES_PASSWORD: pasdrgkrd
      POSTGRES_DB: music_app_db
    volumes:
      - postgres:/var/lib/postgresql/data
  nifi:
    image: apache/nifi:latest
    restart: always
    container_name: nifi
    ports:
      - "8443:8443"
    environment:
      SINGLE_USER_CREDENTIALS_USERNAME: admin
      SINGLE_USER_CREDENTIALS_PASSWORD: ctsBtRBKHRAx69EqUghvvgEvjnaLjFEB
    volumes:
      - nifi:/var/lib/postgresql/data
  minio:
    image: 'bitnami/minio:latest'
    restart: always
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      - MINIO_ROOT_USER=root-user
      - MINIO_ROOT_PASSWORD=paragsard
    volumes:
      - minio:/bitnami/minio/data
  redis:
    image: 'bitnami/redis:latest'
    restart: always
    container_name: redis
    ports:
      - '6379:6379'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_PASSWORD=pahdazgrd
  control-api:
    container_name: datalens-control-api
    image: ghcr.io/datalens-tech/datalens-control-api:0.2058.0
    environment:
      BI_API_UWSGI_WORKERS_COUNT: 4
      CONNECTOR_AVAILABILITY_VISIBLE: "clickhouse,postgres,chyt,ydb"
      RQE_FORCE_OFF: 1
      DL_CRY_ACTUAL_KEY_ID: key_1
      DL_CRY_KEY_VAL_ID_key_1: "h1ZpilcYLYRdWp7Nk8X1M1kBPiUi8rdjz9oBfHyUKIk="
      RQE_SECRET_KEY: ""
      US_HOST: "http://us:8083"
      US_MASTER_TOKEN: "fake-us-master-token"
      CONFIG_PATH: "/etc/backend-configs/api.yaml"

    ports:
      - 8081:8080
    depends_on:
      - us
    volumes:
      - ./backend-configs:/etc/backend-configs

  data-api:
    container_name: datalens-data-api
    image: ghcr.io/datalens-tech/datalens-data-api:0.2058.0
    environment:
      GUNICORN_WORKERS_COUNT: 5
      RQE_FORCE_OFF: 1
      CACHES_ON: 0
      MUTATIONS_CACHES_ON: 0
      RQE_SECRET_KEY: ""
      DL_CRY_ACTUAL_KEY_ID: key_1
      DL_CRY_KEY_VAL_ID_key_1: "h1ZpilcYLYRdWp7Nk8X1M1kBPiUi8rdjz9oBfHyUKIk="
      BI_COMPENG_PG_ON: 1
      BI_COMPENG_PG_URL: "postgresql://postgres:passw0rd@postgres:5432/music_app_db"
      US_HOST: "http://us:8083"
      US_MASTER_TOKEN: "fake-us-master-token"
      CONFIG_PATH: "/etc/backend-configs/api.yaml"

    ports:
      - 8082:8080

    depends_on:
      - us
      - postgres
    volumes:
      - ./backend-configs:/etc/backend-configs


  us:
    container_name: datalens-us
    image: ghcr.io/datalens-tech/datalens-us:0.189.0
    depends_on:
      - postgres
    environment:
      APP_INSTALLATION: "opensource"
      APP_ENV: "prod"
      MASTER_TOKEN: "fake-us-master-token"
      POSTGRES_DSN_LIST: ${METADATA_POSTGRES_DSN_LIST:-postgres://postgres:passw0rd@postgres:5432/music_app_db}
      SKIP_INSTALL_DB_EXTENSIONS: ${METADATA_SKIP_INSTALL_DB_EXTENSIONS:-0}
      USE_DEMO_DATA: ${USE_DEMO_DATA:-1}
      HC: ${HC:-0}
      NODE_EXTRA_CA_CERTS: /certs/root.crt

    ports:
      - "8083:8083"

    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./certs:/certs

  datalens:
    container_name: datalens-ui
    image: ghcr.io/datalens-tech/datalens-ui:0.1532.0
    ports:
      - ${UI_PORT:-8080}:8080
    depends_on:
      - us
      - control-api
      - data-api
      - postgres
    environment:
      APP_MODE: "full"
      APP_ENV: "production"
      APP_INSTALLATION: "opensource"
      AUTH_POLICY: "disabled"
      US_ENDPOINT: "http://us:8083"
      BI_API_ENDPOINT: "http://control-api:8080"
      BI_DATA_ENDPOINT: "http://data-api:8080"
      NODE_EXTRA_CA_CERTS: "/usr/local/share/ca-certificates/cert.pem"
      HC: ${HC:-0}
volumes:
  postgres:
  minio:
  us:
  control-api:
  nifi: